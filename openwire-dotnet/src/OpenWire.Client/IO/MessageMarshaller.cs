//
//
// Copyright 2005-2006 The Apache Software Foundation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

using System;
using System.Collections;
using System.IO;

using OpenWire.Client;
using OpenWire.Client.Commands;
using OpenWire.Client.Core;
using OpenWire.Client.IO;

namespace OpenWire.Client.IO
{
  //
  //  Marshalling code for Open Wire Format for Message
  //
  //
  //  NOTE!: This file is autogenerated - do not modify!
  //        if you need to make a change, please see the Groovy scripts in the
  //        activemq-core module
  //
  public abstract class MessageMarshaller : BaseCommandMarshaller
  {

    // 
    // Un-marshal an object instance from the data input stream
    // 
    public override void Unmarshal(OpenWireFormat wireFormat, Object o, BinaryReader dataIn, BooleanStream bs) 
    {
        base.Unmarshal(wireFormat, o, dataIn, bs);

        Message info = (Message)o;
        info.ProducerId = (ProducerId) UnmarshalCachedObject(wireFormat, dataIn, bs);
        info.Destination = (ActiveMQDestination) UnmarshalCachedObject(wireFormat, dataIn, bs);
        info.TransactionId = (TransactionId) UnmarshalCachedObject(wireFormat, dataIn, bs);
        info.OriginalDestination = (ActiveMQDestination) UnmarshalCachedObject(wireFormat, dataIn, bs);
        info.MessageId = (MessageId) UnmarshalNestedObject(wireFormat, dataIn, bs);
        info.OriginalTransactionId = (TransactionId) UnmarshalCachedObject(wireFormat, dataIn, bs);
        info.GroupID = ReadString(dataIn, bs);
        info.GroupSequence = DataStreamMarshaller.ReadInt(dataIn);
        info.CorrelationId = ReadString(dataIn, bs);
        info.Persistent = bs.ReadBoolean();
        info.Expiration = UnmarshalLong(wireFormat, dataIn, bs);
        info.Priority = DataStreamMarshaller.ReadByte(dataIn);
        info.ReplyTo = (ActiveMQDestination) UnmarshalNestedObject(wireFormat, dataIn, bs);
        info.Timestamp = UnmarshalLong(wireFormat, dataIn, bs);
        info.Type = ReadString(dataIn, bs);
        info.Content = ReadBytes(dataIn, bs.ReadBoolean());
        info.MarshalledProperties = ReadBytes(dataIn, bs.ReadBoolean());
        info.DataStructure = (DataStructure) UnmarshalNestedObject(wireFormat, dataIn, bs);
        info.TargetConsumerId = (ConsumerId) UnmarshalCachedObject(wireFormat, dataIn, bs);
        info.Compressed = bs.ReadBoolean();
        info.RedeliveryCounter = DataStreamMarshaller.ReadInt(dataIn);

        if (bs.ReadBoolean()) {
            short size = DataStreamMarshaller.ReadShort(dataIn);
            BrokerId[] value = new BrokerId[size];
            for( int i=0; i < size; i++ ) {
                value[i] = (BrokerId) UnmarshalNestedObject(wireFormat,dataIn, bs);
            }
            info.BrokerPath = value;
        }
        else {
            info.BrokerPath = null;
        }
        info.Arrival = UnmarshalLong(wireFormat, dataIn, bs);
        info.UserID = ReadString(dataIn, bs);
        info.RecievedByDFBridge = bs.ReadBoolean();

    }


    //
    // Write the booleans that this object uses to a BooleanStream
    //
    public override int Marshal1(OpenWireFormat wireFormat, Object o, BooleanStream bs) {
        Message info = (Message)o;

        int rc = base.Marshal1(wireFormat, info, bs);
    rc += Marshal1CachedObject(wireFormat, info.ProducerId, bs);
    rc += Marshal1CachedObject(wireFormat, info.Destination, bs);
    rc += Marshal1CachedObject(wireFormat, info.TransactionId, bs);
    rc += Marshal1CachedObject(wireFormat, info.OriginalDestination, bs);
    rc += Marshal1NestedObject(wireFormat, info.MessageId, bs);
    rc += Marshal1CachedObject(wireFormat, info.OriginalTransactionId, bs);
    rc += WriteString(info.GroupID, bs);
        rc += WriteString(info.CorrelationId, bs);
    bs.WriteBoolean(info.Persistent);
    rc += Marshal1Long(wireFormat, info.Expiration, bs);
        rc += Marshal1NestedObject(wireFormat, info.ReplyTo, bs);
    rc += Marshal1Long(wireFormat, info.Timestamp, bs);
    rc += WriteString(info.Type, bs);
    bs.WriteBoolean(info.Content!=null);
        rc += info.Content==null ? 0 : info.Content.Length+4;
    bs.WriteBoolean(info.MarshalledProperties!=null);
        rc += info.MarshalledProperties==null ? 0 : info.MarshalledProperties.Length+4;
    rc += Marshal1NestedObject(wireFormat, info.DataStructure, bs);
    rc += Marshal1CachedObject(wireFormat, info.TargetConsumerId, bs);
    bs.WriteBoolean(info.Compressed);
        rc += MarshalObjectArray(wireFormat, info.BrokerPath, bs);
    rc += Marshal1Long(wireFormat, info.Arrival, bs);
    rc += WriteString(info.UserID, bs);
    bs.WriteBoolean(info.RecievedByDFBridge);

        return rc + 3;
    }

    // 
    // Write a object instance to data output stream
    //
    public override void Marshal2(OpenWireFormat wireFormat, Object o, BinaryWriter dataOut, BooleanStream bs) {
        base.Marshal2(wireFormat, o, dataOut, bs);

        Message info = (Message)o;
    Marshal2CachedObject(wireFormat, info.ProducerId, dataOut, bs);
    Marshal2CachedObject(wireFormat, info.Destination, dataOut, bs);
    Marshal2CachedObject(wireFormat, info.TransactionId, dataOut, bs);
    Marshal2CachedObject(wireFormat, info.OriginalDestination, dataOut, bs);
    Marshal2NestedObject(wireFormat, info.MessageId, dataOut, bs);
    Marshal2CachedObject(wireFormat, info.OriginalTransactionId, dataOut, bs);
    WriteString(info.GroupID, dataOut, bs);
    DataStreamMarshaller.WriteInt(info.GroupSequence, dataOut);
    WriteString(info.CorrelationId, dataOut, bs);
    bs.ReadBoolean();
    Marshal2Long(wireFormat, info.Expiration, dataOut, bs);
    DataStreamMarshaller.WriteByte(info.Priority, dataOut);
    Marshal2NestedObject(wireFormat, info.ReplyTo, dataOut, bs);
    Marshal2Long(wireFormat, info.Timestamp, dataOut, bs);
    WriteString(info.Type, dataOut, bs);
    if(bs.ReadBoolean()) {
           DataStreamMarshaller.WriteInt(info.Content.Length, dataOut);
           dataOut.Write(info.Content);
        }
    if(bs.ReadBoolean()) {
           DataStreamMarshaller.WriteInt(info.MarshalledProperties.Length, dataOut);
           dataOut.Write(info.MarshalledProperties);
        }
    Marshal2NestedObject(wireFormat, info.DataStructure, dataOut, bs);
    Marshal2CachedObject(wireFormat, info.TargetConsumerId, dataOut, bs);
    bs.ReadBoolean();
    DataStreamMarshaller.WriteInt(info.RedeliveryCounter, dataOut);
    MarshalObjectArray(wireFormat, info.BrokerPath, dataOut, bs);
    Marshal2Long(wireFormat, info.Arrival, dataOut, bs);
    WriteString(info.UserID, dataOut, bs);
    bs.ReadBoolean();

    }
  }
}
