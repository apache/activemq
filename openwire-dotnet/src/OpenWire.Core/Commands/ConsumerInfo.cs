//
// Marshalling code for Open Wire Format for ConsumerInfo
//
//
// NOTE!: This file is autogenerated - do not modify!
//        if you need to make a change, please see the Groovy scripts in the
//        activemq-openwire module
//

using System;
using System.Collections;

using OpenWire.Core;

namespace OpenWire.Core.Commands
{
    public class ConsumerInfo : BaseCommand
    {
    			public const byte ID_ConsumerInfo = 5;
    			
        ConsumerId consumerId;
        bool browser;
        ActiveMQDestination destination;
        int prefetchSize;
        bool dispatchAsync;
        string selector;
        string subcriptionName;
        bool noLocal;
        bool exclusive;
        bool retroactive;
        byte priority;
        BrokerId[] brokerPath;
        bool networkSubscription;



        // TODO generate Equals method
        // TODO generate GetHashCode method
        // TODO generate ToString method


        public override byte GetCommandType() {
            return ID_ConsumerInfo;
        }


        // Properties

        public ConsumerId ConsumerId
        {
            get
            {
                return consumerId;
            }
            set
            {
                consumerId = value;
            }            
        }

        public bool Browser
        {
            get
            {
                return browser;
            }
            set
            {
                browser = value;
            }            
        }

        public ActiveMQDestination Destination
        {
            get
            {
                return destination;
            }
            set
            {
                destination = value;
            }            
        }

        public int PrefetchSize
        {
            get
            {
                return prefetchSize;
            }
            set
            {
                prefetchSize = value;
            }            
        }

        public bool DispatchAsync
        {
            get
            {
                return dispatchAsync;
            }
            set
            {
                dispatchAsync = value;
            }            
        }

        public string Selector
        {
            get
            {
                return selector;
            }
            set
            {
                selector = value;
            }            
        }

        public string SubcriptionName
        {
            get
            {
                return subcriptionName;
            }
            set
            {
                subcriptionName = value;
            }            
        }

        public bool NoLocal
        {
            get
            {
                return noLocal;
            }
            set
            {
                noLocal = value;
            }            
        }

        public bool Exclusive
        {
            get
            {
                return exclusive;
            }
            set
            {
                exclusive = value;
            }            
        }

        public bool Retroactive
        {
            get
            {
                return retroactive;
            }
            set
            {
                retroactive = value;
            }            
        }

        public byte Priority
        {
            get
            {
                return priority;
            }
            set
            {
                priority = value;
            }            
        }

        public BrokerId[] BrokerPath
        {
            get
            {
                return brokerPath;
            }
            set
            {
                brokerPath = value;
            }            
        }

        public bool NetworkSubscription
        {
            get
            {
                return networkSubscription;
            }
            set
            {
                networkSubscription = value;
            }            
        }

    }
}
