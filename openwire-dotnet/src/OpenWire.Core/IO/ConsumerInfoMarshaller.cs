//
// Marshalling code for Open Wire Format for ConsumerInfo
//
//
// NOTE!: This file is autogenerated - do not modify!
//        if you need to make a change, please see the Groovy scripts in the
//        activemq-openwire module
//

using System;
using System.Collections;
using System.IO;

using OpenWire.Core;
using OpenWire.Core.Commands;
using OpenWire.Core.IO;

namespace OpenWire.Core.IO
{
    public class ConsumerInfoMarshaller : AbstractCommandMarshaller
    {

        public override Command CreateCommand() {
            return new ConsumerInfo();
        }

        public override void BuildCommand(Command command, BinaryReader dataIn) {
            base.BuildCommand(command, dataIn);
            ConsumerInfo info = (ConsumerInfo) command;
            info.setConsumerId((org.apache.activemq.command.ConsumerId) readObject(dataIn));
            info.setBrowser(dataIn.readBoolean());
            info.setDestination((org.apache.activemq.command.ActiveMQDestination) readObject(dataIn));
            info.setPrefetchSize(dataIn.readInt());
            info.setDispatchAsync(dataIn.readBoolean());
            info.setSelector(dataIn.readUTF());
            info.setSubcriptionName(dataIn.readUTF());
            info.setNoLocal(dataIn.readBoolean());
            info.setExclusive(dataIn.readBoolean());
            info.setRetroactive(dataIn.readBoolean());
            info.setPriority(dataIn.readByte());
            info.setBrokerPath((org.apache.activemq.command.BrokerId[]) readObject(dataIn));
            info.setNetworkSubscription(dataIn.readBoolean());

        }

        public override void WriteCommand(Command command, BinaryWriter dataOut) {
            base.WriteCommand(command, dataOut);
            ConsumerInfo info = (ConsumerInfo) command;
            writeObject(info.getConsumerId(), dataOut);
            dataOut.writeBoolean(info.isBrowser());
            writeObject(info.getDestination(), dataOut);
            dataOut.writeInt(info.getPrefetchSize());
            dataOut.writeBoolean(info.isDispatchAsync());
            writeUTF(info.getSelector(), dataOut);
            writeUTF(info.getSubcriptionName(), dataOut);
            dataOut.writeBoolean(info.isNoLocal());
            dataOut.writeBoolean(info.isExclusive());
            dataOut.writeBoolean(info.isRetroactive());
            dataOut.writeByte(info.getPriority());
            writeObject(info.getBrokerPath(), dataOut);
            dataOut.writeBoolean(info.isNetworkSubscription());

        }
    }
}
