//
// Marshalling code for Open Wire Format for MessageAck
//
//
// NOTE!: This file is autogenerated - do not modify!
//        if you need to make a change, please see the Groovy scripts in the
//        activemq-openwire module
//

using System;
using System.Collections;
using System.IO;

using OpenWire.Core;
using OpenWire.Core.Commands;
using OpenWire.Core.IO;

namespace OpenWire.Core.IO
{
    public class MessageAckMarshaller : AbstractCommandMarshaller
    {

        public override Command CreateCommand() {
            return new MessageAck();
        }

        public override void BuildCommand(Command command, BinaryReader dataIn) {
            base.BuildCommand(command, dataIn);
            MessageAck info = (MessageAck) command;
            info.setDestination((org.apache.activemq.command.ActiveMQDestination) readObject(dataIn));
            info.setTransactionId((org.apache.activemq.command.TransactionId) readObject(dataIn));
            info.setConsumerId((org.apache.activemq.command.ConsumerId) readObject(dataIn));
            info.setAckType(dataIn.readByte());
            info.setFirstMessageId((org.apache.activemq.command.MessageId) readObject(dataIn));
            info.setLastMessageId((org.apache.activemq.command.MessageId) readObject(dataIn));
            info.setMessageCount(dataIn.readInt());

        }

        public override void WriteCommand(Command command, BinaryWriter dataOut) {
            base.WriteCommand(command, dataOut);
            MessageAck info = (MessageAck) command;
            writeObject(info.getDestination(), dataOut);
            writeObject(info.getTransactionId(), dataOut);
            writeObject(info.getConsumerId(), dataOut);
            dataOut.writeByte(info.getAckType());
            writeObject(info.getFirstMessageId(), dataOut);
            writeObject(info.getLastMessageId(), dataOut);
            dataOut.writeInt(info.getMessageCount());

        }
    }
}
