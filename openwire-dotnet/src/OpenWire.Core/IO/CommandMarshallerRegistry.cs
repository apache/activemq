//
// Marshalling code for Open Wire Format for ExceptionResponse
//
//
// NOTE!: This file is autogenerated - do not modify!
//        if you need to make a change, please see the Groovy scripts in the
//        activemq-openwire module
//

using System;
using System.Collections;
using System.IO;

using OpenWire.Core;
using OpenWire.Core.Commands;
using OpenWire.Core.IO;

namespace OpenWire.Core.IO
{
    public class CommandMarshallerRegistry
    {
				public static Command ReadCommand(BinaryReader dataIn) 
				{
						byte commandID = dataIn.ReadByte();
						switch (commandID) 
						{

				case MessageId.ID_MessageId:
						return messageIdMarshaller.ReadCommand(dataIn);
						

				case BrokerInfo.ID_BrokerInfo:
						return brokerInfoMarshaller.ReadCommand(dataIn);
						

				case ActiveMQTempQueue.ID_ActiveMQTempQueue:
						return activeMQTempQueueMarshaller.ReadCommand(dataIn);
						

				case LocalTransactionId.ID_LocalTransactionId:
						return localTransactionIdMarshaller.ReadCommand(dataIn);
						

				case RemoveSubscriptionInfo.ID_RemoveSubscriptionInfo:
						return removeSubscriptionInfoMarshaller.ReadCommand(dataIn);
						

				case IntegerResponse.ID_IntegerResponse:
						return integerResponseMarshaller.ReadCommand(dataIn);
						

				case ActiveMQQueue.ID_ActiveMQQueue:
						return activeMQQueueMarshaller.ReadCommand(dataIn);
						

				case DestinationInfo.ID_DestinationInfo:
						return destinationInfoMarshaller.ReadCommand(dataIn);
						

				case ActiveMQBytesMessage.ID_ActiveMQBytesMessage:
						return activeMQBytesMessageMarshaller.ReadCommand(dataIn);
						

				case ShutdownInfo.ID_ShutdownInfo:
						return shutdownInfoMarshaller.ReadCommand(dataIn);
						

				case DataResponse.ID_DataResponse:
						return dataResponseMarshaller.ReadCommand(dataIn);
						

				case SessionId.ID_SessionId:
						return sessionIdMarshaller.ReadCommand(dataIn);
						

				case DataArrayResponse.ID_DataArrayResponse:
						return dataArrayResponseMarshaller.ReadCommand(dataIn);
						

				case JournalQueueAck.ID_JournalQueueAck:
						return journalQueueAckMarshaller.ReadCommand(dataIn);
						

				case WireFormatInfo.ID_WireFormatInfo:
						return wireFormatInfoMarshaller.ReadCommand(dataIn);
						

				case Response.ID_Response:
						return responseMarshaller.ReadCommand(dataIn);
						

				case ConnectionError.ID_ConnectionError:
						return connectionErrorMarshaller.ReadCommand(dataIn);
						

				case ActiveMQObjectMessage.ID_ActiveMQObjectMessage:
						return activeMQObjectMessageMarshaller.ReadCommand(dataIn);
						

				case ConsumerInfo.ID_ConsumerInfo:
						return consumerInfoMarshaller.ReadCommand(dataIn);
						

				case ConnectionId.ID_ConnectionId:
						return connectionIdMarshaller.ReadCommand(dataIn);
						

				case ActiveMQTempTopic.ID_ActiveMQTempTopic:
						return activeMQTempTopicMarshaller.ReadCommand(dataIn);
						

				case DiscoveryEvent.ID_DiscoveryEvent:
						return discoveryEventMarshaller.ReadCommand(dataIn);
						

				case ConnectionInfo.ID_ConnectionInfo:
						return connectionInfoMarshaller.ReadCommand(dataIn);
						

				case KeepAliveInfo.ID_KeepAliveInfo:
						return keepAliveInfoMarshaller.ReadCommand(dataIn);
						

				case XATransactionId.ID_XATransactionId:
						return xATransactionIdMarshaller.ReadCommand(dataIn);
						

				case JournalTrace.ID_JournalTrace:
						return journalTraceMarshaller.ReadCommand(dataIn);
						

				case FlushCommand.ID_FlushCommand:
						return flushCommandMarshaller.ReadCommand(dataIn);
						

				case ConsumerId.ID_ConsumerId:
						return consumerIdMarshaller.ReadCommand(dataIn);
						

				case JournalTopicAck.ID_JournalTopicAck:
						return journalTopicAckMarshaller.ReadCommand(dataIn);
						

				case ActiveMQTextMessage.ID_ActiveMQTextMessage:
						return activeMQTextMessageMarshaller.ReadCommand(dataIn);
						

				case BrokerId.ID_BrokerId:
						return brokerIdMarshaller.ReadCommand(dataIn);
						

				case MessageDispatch.ID_MessageDispatch:
						return messageDispatchMarshaller.ReadCommand(dataIn);
						

				case ProducerInfo.ID_ProducerInfo:
						return producerInfoMarshaller.ReadCommand(dataIn);
						

				case SubscriptionInfo.ID_SubscriptionInfo:
						return subscriptionInfoMarshaller.ReadCommand(dataIn);
						

				case ActiveMQMapMessage.ID_ActiveMQMapMessage:
						return activeMQMapMessageMarshaller.ReadCommand(dataIn);
						

				case SessionInfo.ID_SessionInfo:
						return sessionInfoMarshaller.ReadCommand(dataIn);
						

				case ActiveMQMessage.ID_ActiveMQMessage:
						return activeMQMessageMarshaller.ReadCommand(dataIn);
						

				case TransactionInfo.ID_TransactionInfo:
						return transactionInfoMarshaller.ReadCommand(dataIn);
						

				case ActiveMQStreamMessage.ID_ActiveMQStreamMessage:
						return activeMQStreamMessageMarshaller.ReadCommand(dataIn);
						

				case MessageAck.ID_MessageAck:
						return messageAckMarshaller.ReadCommand(dataIn);
						

				case ProducerId.ID_ProducerId:
						return producerIdMarshaller.ReadCommand(dataIn);
						

				case ActiveMQTopic.ID_ActiveMQTopic:
						return activeMQTopicMarshaller.ReadCommand(dataIn);
						

				case JournalTransaction.ID_JournalTransaction:
						return journalTransactionMarshaller.ReadCommand(dataIn);
						

				case RemoveInfo.ID_RemoveInfo:
						return removeInfoMarshaller.ReadCommand(dataIn);
						

				case ControlCommand.ID_ControlCommand:
						return controlCommandMarshaller.ReadCommand(dataIn);
						

				case ExceptionResponse.ID_ExceptionResponse:
						return exceptionResponseMarshaller.ReadCommand(dataIn);
						
						
								default:
										throw new Exception("Unknown command type: " + commandID);
						}
				}


				public static void WriteCommand(Command command, BinaryWriter dataOut) 
				{
				    byte commandID = command.GetCommandType();
						dataOut.Write(commandID);
						switch (commandID) 
						{

				case MessageId.ID_MessageId:
						messageIdMarshaller.WriteCommand(command, dataOut);
						break;
						

				case BrokerInfo.ID_BrokerInfo:
						brokerInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQTempQueue.ID_ActiveMQTempQueue:
						activeMQTempQueueMarshaller.WriteCommand(command, dataOut);
						break;
						

				case LocalTransactionId.ID_LocalTransactionId:
						localTransactionIdMarshaller.WriteCommand(command, dataOut);
						break;
						

				case RemoveSubscriptionInfo.ID_RemoveSubscriptionInfo:
						removeSubscriptionInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case IntegerResponse.ID_IntegerResponse:
						integerResponseMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQQueue.ID_ActiveMQQueue:
						activeMQQueueMarshaller.WriteCommand(command, dataOut);
						break;
						

				case DestinationInfo.ID_DestinationInfo:
						destinationInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQBytesMessage.ID_ActiveMQBytesMessage:
						activeMQBytesMessageMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ShutdownInfo.ID_ShutdownInfo:
						shutdownInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case DataResponse.ID_DataResponse:
						dataResponseMarshaller.WriteCommand(command, dataOut);
						break;
						

				case SessionId.ID_SessionId:
						sessionIdMarshaller.WriteCommand(command, dataOut);
						break;
						

				case DataArrayResponse.ID_DataArrayResponse:
						dataArrayResponseMarshaller.WriteCommand(command, dataOut);
						break;
						

				case JournalQueueAck.ID_JournalQueueAck:
						journalQueueAckMarshaller.WriteCommand(command, dataOut);
						break;
						

				case WireFormatInfo.ID_WireFormatInfo:
						wireFormatInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case Response.ID_Response:
						responseMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ConnectionError.ID_ConnectionError:
						connectionErrorMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQObjectMessage.ID_ActiveMQObjectMessage:
						activeMQObjectMessageMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ConsumerInfo.ID_ConsumerInfo:
						consumerInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ConnectionId.ID_ConnectionId:
						connectionIdMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQTempTopic.ID_ActiveMQTempTopic:
						activeMQTempTopicMarshaller.WriteCommand(command, dataOut);
						break;
						

				case DiscoveryEvent.ID_DiscoveryEvent:
						discoveryEventMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ConnectionInfo.ID_ConnectionInfo:
						connectionInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case KeepAliveInfo.ID_KeepAliveInfo:
						keepAliveInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case XATransactionId.ID_XATransactionId:
						xATransactionIdMarshaller.WriteCommand(command, dataOut);
						break;
						

				case JournalTrace.ID_JournalTrace:
						journalTraceMarshaller.WriteCommand(command, dataOut);
						break;
						

				case FlushCommand.ID_FlushCommand:
						flushCommandMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ConsumerId.ID_ConsumerId:
						consumerIdMarshaller.WriteCommand(command, dataOut);
						break;
						

				case JournalTopicAck.ID_JournalTopicAck:
						journalTopicAckMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQTextMessage.ID_ActiveMQTextMessage:
						activeMQTextMessageMarshaller.WriteCommand(command, dataOut);
						break;
						

				case BrokerId.ID_BrokerId:
						brokerIdMarshaller.WriteCommand(command, dataOut);
						break;
						

				case MessageDispatch.ID_MessageDispatch:
						messageDispatchMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ProducerInfo.ID_ProducerInfo:
						producerInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case SubscriptionInfo.ID_SubscriptionInfo:
						subscriptionInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQMapMessage.ID_ActiveMQMapMessage:
						activeMQMapMessageMarshaller.WriteCommand(command, dataOut);
						break;
						

				case SessionInfo.ID_SessionInfo:
						sessionInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQMessage.ID_ActiveMQMessage:
						activeMQMessageMarshaller.WriteCommand(command, dataOut);
						break;
						

				case TransactionInfo.ID_TransactionInfo:
						transactionInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQStreamMessage.ID_ActiveMQStreamMessage:
						activeMQStreamMessageMarshaller.WriteCommand(command, dataOut);
						break;
						

				case MessageAck.ID_MessageAck:
						messageAckMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ProducerId.ID_ProducerId:
						producerIdMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ActiveMQTopic.ID_ActiveMQTopic:
						activeMQTopicMarshaller.WriteCommand(command, dataOut);
						break;
						

				case JournalTransaction.ID_JournalTransaction:
						journalTransactionMarshaller.WriteCommand(command, dataOut);
						break;
						

				case RemoveInfo.ID_RemoveInfo:
						removeInfoMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ControlCommand.ID_ControlCommand:
						controlCommandMarshaller.WriteCommand(command, dataOut);
						break;
						

				case ExceptionResponse.ID_ExceptionResponse:
						exceptionResponseMarshaller.WriteCommand(command, dataOut);
						break;
						
						
								default:
										throw new Exception("Unknown command type: " + commandID);
						}
				}


				// Properties     

	            
	      private static MessageIdMarshaller messageIdMarshaller = new MessageIdMarshaller();
	      
        public static MessageIdMarshaller MessageIdMarshaller
        {
            get
            {
                return messageIdMarshaller;
            }
        }


	            
	      private static BrokerInfoMarshaller brokerInfoMarshaller = new BrokerInfoMarshaller();
	      
        public static BrokerInfoMarshaller BrokerInfoMarshaller
        {
            get
            {
                return brokerInfoMarshaller;
            }
        }


	            
	      private static ActiveMQTempQueueMarshaller activeMQTempQueueMarshaller = new ActiveMQTempQueueMarshaller();
	      
        public static ActiveMQTempQueueMarshaller ActiveMQTempQueueMarshaller
        {
            get
            {
                return activeMQTempQueueMarshaller;
            }
        }


	            
	      private static LocalTransactionIdMarshaller localTransactionIdMarshaller = new LocalTransactionIdMarshaller();
	      
        public static LocalTransactionIdMarshaller LocalTransactionIdMarshaller
        {
            get
            {
                return localTransactionIdMarshaller;
            }
        }


	            
	      private static RemoveSubscriptionInfoMarshaller removeSubscriptionInfoMarshaller = new RemoveSubscriptionInfoMarshaller();
	      
        public static RemoveSubscriptionInfoMarshaller RemoveSubscriptionInfoMarshaller
        {
            get
            {
                return removeSubscriptionInfoMarshaller;
            }
        }


	            
	      private static IntegerResponseMarshaller integerResponseMarshaller = new IntegerResponseMarshaller();
	      
        public static IntegerResponseMarshaller IntegerResponseMarshaller
        {
            get
            {
                return integerResponseMarshaller;
            }
        }


	            
	      private static ActiveMQQueueMarshaller activeMQQueueMarshaller = new ActiveMQQueueMarshaller();
	      
        public static ActiveMQQueueMarshaller ActiveMQQueueMarshaller
        {
            get
            {
                return activeMQQueueMarshaller;
            }
        }


	            
	      private static DestinationInfoMarshaller destinationInfoMarshaller = new DestinationInfoMarshaller();
	      
        public static DestinationInfoMarshaller DestinationInfoMarshaller
        {
            get
            {
                return destinationInfoMarshaller;
            }
        }


	            
	      private static ActiveMQBytesMessageMarshaller activeMQBytesMessageMarshaller = new ActiveMQBytesMessageMarshaller();
	      
        public static ActiveMQBytesMessageMarshaller ActiveMQBytesMessageMarshaller
        {
            get
            {
                return activeMQBytesMessageMarshaller;
            }
        }


	            
	      private static ShutdownInfoMarshaller shutdownInfoMarshaller = new ShutdownInfoMarshaller();
	      
        public static ShutdownInfoMarshaller ShutdownInfoMarshaller
        {
            get
            {
                return shutdownInfoMarshaller;
            }
        }


	            
	      private static DataResponseMarshaller dataResponseMarshaller = new DataResponseMarshaller();
	      
        public static DataResponseMarshaller DataResponseMarshaller
        {
            get
            {
                return dataResponseMarshaller;
            }
        }


	            
	      private static SessionIdMarshaller sessionIdMarshaller = new SessionIdMarshaller();
	      
        public static SessionIdMarshaller SessionIdMarshaller
        {
            get
            {
                return sessionIdMarshaller;
            }
        }


	            
	      private static DataArrayResponseMarshaller dataArrayResponseMarshaller = new DataArrayResponseMarshaller();
	      
        public static DataArrayResponseMarshaller DataArrayResponseMarshaller
        {
            get
            {
                return dataArrayResponseMarshaller;
            }
        }


	            
	      private static JournalQueueAckMarshaller journalQueueAckMarshaller = new JournalQueueAckMarshaller();
	      
        public static JournalQueueAckMarshaller JournalQueueAckMarshaller
        {
            get
            {
                return journalQueueAckMarshaller;
            }
        }


	            
	      private static WireFormatInfoMarshaller wireFormatInfoMarshaller = new WireFormatInfoMarshaller();
	      
        public static WireFormatInfoMarshaller WireFormatInfoMarshaller
        {
            get
            {
                return wireFormatInfoMarshaller;
            }
        }


	            
	      private static ResponseMarshaller responseMarshaller = new ResponseMarshaller();
	      
        public static ResponseMarshaller ResponseMarshaller
        {
            get
            {
                return responseMarshaller;
            }
        }


	            
	      private static ConnectionErrorMarshaller connectionErrorMarshaller = new ConnectionErrorMarshaller();
	      
        public static ConnectionErrorMarshaller ConnectionErrorMarshaller
        {
            get
            {
                return connectionErrorMarshaller;
            }
        }


	            
	      private static ActiveMQObjectMessageMarshaller activeMQObjectMessageMarshaller = new ActiveMQObjectMessageMarshaller();
	      
        public static ActiveMQObjectMessageMarshaller ActiveMQObjectMessageMarshaller
        {
            get
            {
                return activeMQObjectMessageMarshaller;
            }
        }


	            
	      private static ConsumerInfoMarshaller consumerInfoMarshaller = new ConsumerInfoMarshaller();
	      
        public static ConsumerInfoMarshaller ConsumerInfoMarshaller
        {
            get
            {
                return consumerInfoMarshaller;
            }
        }


	            
	      private static ConnectionIdMarshaller connectionIdMarshaller = new ConnectionIdMarshaller();
	      
        public static ConnectionIdMarshaller ConnectionIdMarshaller
        {
            get
            {
                return connectionIdMarshaller;
            }
        }


	            
	      private static ActiveMQTempTopicMarshaller activeMQTempTopicMarshaller = new ActiveMQTempTopicMarshaller();
	      
        public static ActiveMQTempTopicMarshaller ActiveMQTempTopicMarshaller
        {
            get
            {
                return activeMQTempTopicMarshaller;
            }
        }


	            
	      private static DiscoveryEventMarshaller discoveryEventMarshaller = new DiscoveryEventMarshaller();
	      
        public static DiscoveryEventMarshaller DiscoveryEventMarshaller
        {
            get
            {
                return discoveryEventMarshaller;
            }
        }


	            
	      private static ConnectionInfoMarshaller connectionInfoMarshaller = new ConnectionInfoMarshaller();
	      
        public static ConnectionInfoMarshaller ConnectionInfoMarshaller
        {
            get
            {
                return connectionInfoMarshaller;
            }
        }


	            
	      private static KeepAliveInfoMarshaller keepAliveInfoMarshaller = new KeepAliveInfoMarshaller();
	      
        public static KeepAliveInfoMarshaller KeepAliveInfoMarshaller
        {
            get
            {
                return keepAliveInfoMarshaller;
            }
        }


	            
	      private static XATransactionIdMarshaller xATransactionIdMarshaller = new XATransactionIdMarshaller();
	      
        public static XATransactionIdMarshaller XATransactionIdMarshaller
        {
            get
            {
                return xATransactionIdMarshaller;
            }
        }


	            
	      private static JournalTraceMarshaller journalTraceMarshaller = new JournalTraceMarshaller();
	      
        public static JournalTraceMarshaller JournalTraceMarshaller
        {
            get
            {
                return journalTraceMarshaller;
            }
        }


	            
	      private static FlushCommandMarshaller flushCommandMarshaller = new FlushCommandMarshaller();
	      
        public static FlushCommandMarshaller FlushCommandMarshaller
        {
            get
            {
                return flushCommandMarshaller;
            }
        }


	            
	      private static ConsumerIdMarshaller consumerIdMarshaller = new ConsumerIdMarshaller();
	      
        public static ConsumerIdMarshaller ConsumerIdMarshaller
        {
            get
            {
                return consumerIdMarshaller;
            }
        }


	            
	      private static JournalTopicAckMarshaller journalTopicAckMarshaller = new JournalTopicAckMarshaller();
	      
        public static JournalTopicAckMarshaller JournalTopicAckMarshaller
        {
            get
            {
                return journalTopicAckMarshaller;
            }
        }


	            
	      private static ActiveMQTextMessageMarshaller activeMQTextMessageMarshaller = new ActiveMQTextMessageMarshaller();
	      
        public static ActiveMQTextMessageMarshaller ActiveMQTextMessageMarshaller
        {
            get
            {
                return activeMQTextMessageMarshaller;
            }
        }


	            
	      private static BrokerIdMarshaller brokerIdMarshaller = new BrokerIdMarshaller();
	      
        public static BrokerIdMarshaller BrokerIdMarshaller
        {
            get
            {
                return brokerIdMarshaller;
            }
        }


	            
	      private static MessageDispatchMarshaller messageDispatchMarshaller = new MessageDispatchMarshaller();
	      
        public static MessageDispatchMarshaller MessageDispatchMarshaller
        {
            get
            {
                return messageDispatchMarshaller;
            }
        }


	            
	      private static ProducerInfoMarshaller producerInfoMarshaller = new ProducerInfoMarshaller();
	      
        public static ProducerInfoMarshaller ProducerInfoMarshaller
        {
            get
            {
                return producerInfoMarshaller;
            }
        }


	            
	      private static SubscriptionInfoMarshaller subscriptionInfoMarshaller = new SubscriptionInfoMarshaller();
	      
        public static SubscriptionInfoMarshaller SubscriptionInfoMarshaller
        {
            get
            {
                return subscriptionInfoMarshaller;
            }
        }


	            
	      private static ActiveMQMapMessageMarshaller activeMQMapMessageMarshaller = new ActiveMQMapMessageMarshaller();
	      
        public static ActiveMQMapMessageMarshaller ActiveMQMapMessageMarshaller
        {
            get
            {
                return activeMQMapMessageMarshaller;
            }
        }


	            
	      private static SessionInfoMarshaller sessionInfoMarshaller = new SessionInfoMarshaller();
	      
        public static SessionInfoMarshaller SessionInfoMarshaller
        {
            get
            {
                return sessionInfoMarshaller;
            }
        }


	            
	      private static ActiveMQMessageMarshaller activeMQMessageMarshaller = new ActiveMQMessageMarshaller();
	      
        public static ActiveMQMessageMarshaller ActiveMQMessageMarshaller
        {
            get
            {
                return activeMQMessageMarshaller;
            }
        }


	            
	      private static TransactionInfoMarshaller transactionInfoMarshaller = new TransactionInfoMarshaller();
	      
        public static TransactionInfoMarshaller TransactionInfoMarshaller
        {
            get
            {
                return transactionInfoMarshaller;
            }
        }


	            
	      private static ActiveMQStreamMessageMarshaller activeMQStreamMessageMarshaller = new ActiveMQStreamMessageMarshaller();
	      
        public static ActiveMQStreamMessageMarshaller ActiveMQStreamMessageMarshaller
        {
            get
            {
                return activeMQStreamMessageMarshaller;
            }
        }


	            
	      private static MessageAckMarshaller messageAckMarshaller = new MessageAckMarshaller();
	      
        public static MessageAckMarshaller MessageAckMarshaller
        {
            get
            {
                return messageAckMarshaller;
            }
        }


	            
	      private static ProducerIdMarshaller producerIdMarshaller = new ProducerIdMarshaller();
	      
        public static ProducerIdMarshaller ProducerIdMarshaller
        {
            get
            {
                return producerIdMarshaller;
            }
        }


	            
	      private static ActiveMQTopicMarshaller activeMQTopicMarshaller = new ActiveMQTopicMarshaller();
	      
        public static ActiveMQTopicMarshaller ActiveMQTopicMarshaller
        {
            get
            {
                return activeMQTopicMarshaller;
            }
        }


	            
	      private static JournalTransactionMarshaller journalTransactionMarshaller = new JournalTransactionMarshaller();
	      
        public static JournalTransactionMarshaller JournalTransactionMarshaller
        {
            get
            {
                return journalTransactionMarshaller;
            }
        }


	            
	      private static RemoveInfoMarshaller removeInfoMarshaller = new RemoveInfoMarshaller();
	      
        public static RemoveInfoMarshaller RemoveInfoMarshaller
        {
            get
            {
                return removeInfoMarshaller;
            }
        }


	            
	      private static ControlCommandMarshaller controlCommandMarshaller = new ControlCommandMarshaller();
	      
        public static ControlCommandMarshaller ControlCommandMarshaller
        {
            get
            {
                return controlCommandMarshaller;
            }
        }


	            
	      private static ExceptionResponseMarshaller exceptionResponseMarshaller = new ExceptionResponseMarshaller();
	      
        public static ExceptionResponseMarshaller ExceptionResponseMarshaller
        {
            get
            {
                return exceptionResponseMarshaller;
            }
        }


		
    }
}
