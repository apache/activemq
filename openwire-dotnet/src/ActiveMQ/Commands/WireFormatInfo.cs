/*
* Copyright 2006 The Apache Software Foundation or its licensors, as
* applicable.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

using System;
using System.Collections;

using ActiveMQ.OpenWire;
using ActiveMQ.Commands;

namespace ActiveMQ.Commands
{
    //
    //  Marshalling code for Open Wire Format for WireFormatInfo
    //
    //
    //  NOTE!: This file is autogenerated - do not modify!
    //         if you need to make a change, please see the Groovy scripts in the
    //         activemq-core module
    //
    public class WireFormatInfo : AbstractCommand
    {
        public const byte ID_WireFormatInfo = 1;
    			
        byte[] magic;
        int version;
        bool cacheEnabled;
        bool stackTraceEnabled;
        bool tcpNoDelayEnabled;
        bool prefixPacketSize;
        bool tightEncodingEnabled;

		public override string ToString() {
            return GetType().Name + "["
                + " Magic=" + Magic
                + " Version=" + Version
                + " CacheEnabled=" + CacheEnabled
                + " StackTraceEnabled=" + StackTraceEnabled
                + " TcpNoDelayEnabled=" + TcpNoDelayEnabled
                + " PrefixPacketSize=" + PrefixPacketSize
                + " TightEncodingEnabled=" + TightEncodingEnabled
                + " ]";

		}
	


        public override byte GetDataStructureType() {
            return ID_WireFormatInfo;
        }


        // Properties

        public byte[] Magic
        {
            get { return magic; }
            set { this.magic = value; }            
        }

        public int Version
        {
            get { return version; }
            set { this.version = value; }            
        }

        public bool CacheEnabled
        {
            get { return cacheEnabled; }
            set { this.cacheEnabled = value; }            
        }

        public bool StackTraceEnabled
        {
            get { return stackTraceEnabled; }
            set { this.stackTraceEnabled = value; }            
        }

        public bool TcpNoDelayEnabled
        {
            get { return tcpNoDelayEnabled; }
            set { this.tcpNoDelayEnabled = value; }            
        }

        public bool PrefixPacketSize
        {
            get { return prefixPacketSize; }
            set { this.prefixPacketSize = value; }            
        }

        public bool TightEncodingEnabled
        {
            get { return tightEncodingEnabled; }
            set { this.tightEncodingEnabled = value; }            
        }

    }
}
