################################################################################
# Apache JMeter Property file
################################################################################

# ------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#Preferred GUI language. Comment out to use the JVM default locale's language.
#language=de

#Paths to search for classes (";" must be the separator)
#search_paths=null

# Netscape HTTP Cookie file
cookies=cookies

# Authorization
authorization=authorization

#Working directory
user.dir=.

# XML Reader(Parser) - Must implement SAX 2 specs
xml.parser=org.apache.xerces.parsers.SAXParser

#Classname of the ssl provider to be used (to enable testing of https urls)
#And the package name where Stream Handlers can be found
#These provided defaults can be uncommented, and they will work if you are using
#Sun's JSSE implementation.

ssl.provider=com.sun.net.ssl.internal.ssl.Provider
#ssl.provider=iaik.security.jsse.provider.IAIKJSSEProvider
ssl.pkgs=com.sun.net.ssl.internal.www.protocol

#The location of the truststore (trusted certificates) and keystore ( if other than the default.
#you can uncomment this and change the path to the correct location.
#javax.net.ssl.trustStore=/path/to/cacerts
#javax.net.ssl.keyStore=/path/to/keystore

#The password to your keystore
#javax.net.ssl.keyStorePassword=password

#Alternative protocol of the ssl provider for IAIK JCE + iSaSiLk
#You can also override IAIK specific Providers as well.

#ssl.pkgs=iaik.protocol
#ssl.provider=com.mycompany.security.provider.SmartProvider
#iaik.provider=com.mycompany.security.provider.SmartSSLProvider

#Flag for whether to output debug messages to System.err
#To enable it, set the value to "all"  Note, for it to work with
#JSSE, it needs to be done from the Java command (i.e. -Djavax.net.debug=all)
javax.net.debug=all

#Classname of the Swing default UI
#Installed Look and Feel classes on Windows are:
#  Metal   = javax.swing.plaf.metal.MetalLookAndFeel
#  Motif   = com.sun.java.swing.plaf.motif.MotifLookAndFeel
#  Windows = com.sun.java.swing.plaf.windows.WindowsLookAndFeel
## Let LAF be picked up from default 
## (otherwise can cause problems for Eclipse JUnit GUI mode)
#jmeter.laf=javax.swing.plaf.metal.MetalLookAndFeel
#jmeter.laf=com.sun.java.swing.plaf.motif.MotifLookAndFeel

#icons -> moved to program code
#timer.tree.icon=timer.gif
#listener.tree.icon=ear.gif
#bench.tree.icon=clipboard.gif
#thread.tree.icon=thread.gif
#control.tree.icon=knob.gif
#plan.tree.icon=beaker.gif
#config.tree.icon=leafnode.gif

# Remote Hosts - comma delimited
remote_hosts=127.0.0.1

#Components to not display in JMeter GUI
not_in_menu=Remote Method Configuration,JNDI Configuration,JNDI Lookup Configuration,JNDI Request,Default Controller,org.apache.jmeter.control.DynamicController, org.apache.jmeter.protocol.http.control.Cookie,org.apache.jmeter.protocol.http.control.Authorization,org.apache.jmeter.config.LoginConfig,Header,org.apache.jmeter.protocol.http.config.MultipartUrlConfig

#Logging levels for the logging categories in JMeter.  Correct values are FATAL_ERROR, ERROR, WARN, INFO, and DEBUG
# To set the log level for a package or individual class, use:
# log_level.[package_name].[classname]=[PRIORITY_LEVEL]
# But omit "org.apache" from the package name.  The classname is optional.  Further examples below.

log_level.jmeter=INFO
#log_level.jmeter.junit=DEBUG
#log_level.jmeter.engine=WARN
#log_level.jmeter.gui=WARN
#log_level.jmeter.testelement=DEBUG
#log_level.jmeter.util=WARN
#log_level.jmeter.util.classfinder=WARN
#log_level.jmeter.test=DEBUG
#log_level.jmeter.protocol.http=DEBUG
#log_level.jmeter.protocol.ftp=WARN
#log_level.jmeter.protocol.jdbc=WARN
#log_level.jmeter.protocol.java=WARN
#log_level.jmeter.testelements.property=DEBUG
log_level.jorphan=INFO

#Log file for log messages.
# You can specify a different log file for different categories via:
# log_file.[category]=[filename]
# category is equivalent to the package/class names described above

# Combined log file (for jmeter and jorphan)
log_file=jmeter-test.log

# Or define separate logs if required:
#log_file.jorphan=jorphan.log
#log_file.jmeter=jmeter.log


#---------------------------------------------------------------------------
# Results file configuration
#---------------------------------------------------------------------------

# For testing, output is changed to CSV and variable fields
# (timestamp and elased) are suppressed

# This section helps determine how result data will be saved.
# The commented out values are the defaults.

# legitimate values: xml, csv, db.  Only xml and csv are currently supported.
jmeter.save.saveservice.output_format=csv


# true when field should be saved; false otherwise

# assertion_results_failure_message only affects CSV output
#jmeter.save.saveservice.assertion_results_failure_message=true
#jmeter.save.saveservice.data_type=true
#jmeter.save.saveservice.label=true
#jmeter.save.saveservice.response_code=true
#jmeter.save.saveservice.response_data=false
#jmeter.save.saveservice.response_message=true
#jmeter.save.saveservice.successful=true
#jmeter.save.saveservice.thread_name=true
jmeter.save.saveservice.time=false

# legitimate values: none, ms, or a format suitable for SimpleDateFormat
jmeter.save.saveservice.timestamp_format=none
#jmeter.save.saveservice.timestamp_format=MM/dd/yy HH:mm:ss

# legitimate values: none, first, all
#jmeter.save.saveservice.assertion_results=none

# For use with Comma-separated value (CSV) files or other formats
# where the fields' values are separated by specified delimiters.
#jmeter.save.saveservice.default_delimiter=,
#jmeter.save.saveservice.print_field_names=true

# File that holds a record of name changes for backward compatibility issues
upgrade_properties=/bin/upgrade.properties
