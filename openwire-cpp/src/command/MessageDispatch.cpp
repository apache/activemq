/*
* Copyright 2006 The Apache Software Foundation or its licensors, as
* applicable.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
#include "command/MessageDispatch.hpp"

using namespace apache::activemq::client::command;

/*
 *
 *  Marshalling code for Open Wire Format for MessageDispatch
 *
 *
 *  NOTE!: This file is autogenerated - do not modify!
 *         if you need to make a change, please see the Groovy scripts in the
 *         activemq-core module
 *
 */
MessageDispatch::MessageDispatch()
{
    this->consumerId = 0 ;
    this->destination = 0 ;
    this->message = 0 ;
    this->redeliveryCounter = 0 ;
}

MessageDispatch::~MessageDispatch()
{
}

        
p<ConsumerId> MessageDispatch::getConsumerId()
{
    return consumerId ;
}

void MessageDispatch::setConsumerId(p<ConsumerId> consumerId)
{
    this->consumerId = consumerId ;
}

        
p<ActiveMQDestination> MessageDispatch::getDestination()
{
    return destination ;
}

void MessageDispatch::setDestination(p<ActiveMQDestination> destination)
{
    this->destination = destination ;
}

        
p<Message> MessageDispatch::getMessage()
{
    return message ;
}

void MessageDispatch::setMessage(p<Message> message)
{
    this->message = message ;
}

        
int MessageDispatch::getRedeliveryCounter()
{
    return redeliveryCounter ;
}

void MessageDispatch::setRedeliveryCounter(int redeliveryCounter)
{
    this->redeliveryCounter = redeliveryCounter ;
}
